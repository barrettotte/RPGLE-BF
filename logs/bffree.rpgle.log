CRTBNDRPG PGM(OTTEB1/bffree) SRCSTMF('src/bffree.rpgle') OPTION(*NOUNREF) DBGVIEW(*LIST) INCDIR('src')

  5770WDS V7R4M0  190419 RN        IBM ILE RPG             OTTEB1/BFFREE            PUB400     20-05-09 01:11:01        Page      1
   Command  . . . . . . . . . . . . :   CRTBNDRPG
     Issued by  . . . . . . . . . . :     OTTEB
   Program  . . . . . . . . . . . . :   BFFREE
     Library  . . . . . . . . . . . :     OTTEB1
   Text 'description' . . . . . . . :   *SRCMBRTXT
   Source stream file   . . . . . . :   src/bffree.rpgle
     CCSID  . . . . . . . . . . . . :     1252
   Target CCSID . . . . . . . . . . :   *SRC (500)
   Text 'description' . . . . . . . :
   Last Change  . . . . . . . . . . :   20-05-09  01:11:00
   Generation severity level  . . . :   10
   Default activation group . . . . :   *YES
   Compiler options . . . . . . . . :   *XREF      *GEN       *NOSECLVL  *SHOWCPY
                                        *EXPDDS    *EXT       *NOSHOWSKP *NOSRCSTMT
                                        *DEBUGIO   *NOUNREF   *NOEVENTF
   Debugging views  . . . . . . . . :   *LIST
   Debug encryption key . . . . . . :   *NONE
   Output . . . . . . . . . . . . . :   *PRINT
   Optimization level . . . . . . . :   *NONE
   Source listing indentation . . . :   *NONE
   Type conversion options  . . . . :   *NONE
   Sort sequence  . . . . . . . . . :   *HEX
   Language identifier  . . . . . . :   *JOBRUN
   Replace program  . . . . . . . . :   *YES
   User profile . . . . . . . . . . :   *USER
   Authority  . . . . . . . . . . . :   *LIBCRTAUT
   Truncate numeric . . . . . . . . :   *YES
   Fix numeric  . . . . . . . . . . :   *NONE
   Target release . . . . . . . . . :   *CURRENT
   Allow null values  . . . . . . . :   *NO
   Define condition names . . . . . :   *NONE
   Enable performance collection  . :   *PEP
   Profiling data . . . . . . . . . :   *NOCOL
   Licensed Internal Code options . :
   Generate program interface . . . :   *NO
   Include directory  . . . . . . . :   src
   Preprocessor options . . . . . . :   *NONE
                                                    ** WWW.PUB400.COM **
  5770WDS V7R4M0  190419 RN        IBM ILE RPG             OTTEB1/BFFREE            PUB400     20-05-09 01:11:01        Page      2
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
                           S o u r c e   L i s t i n g
      1 **free                                                                                                               000001
      2 // Basic BF Interpreter in fully free RPGLE                                                                          000002
      3                                                                                                                      000003
      4 ctl-opt main(main);                                                                                                  000004
      5 ctl-opt option(*srcstmt:*nodebugio:*nounref) dftactgrp(*no);                                                         000005
 000006                                                                                                                      000006
         *--------------------------------------------------------------------*
         * Compiler Options in Effect:                                        *
         *--------------------------------------------------------------------*
         *  Text 'description' . . . . . . . :                                *
         *  Generation severity level  . . . :   10                           *
         *  Default activation group . . . . :   *NO                          *
         *  Compiler options . . . . . . . . :   *XREF      *GEN              *
         *                                       *NOSECLVL  *SHOWCPY          *
         *                                       *EXPDDS    *EXT              *
         *                                       *NOSHOWSKP *SRCSTMT          *
         *                                       *NODEBUGIO *NOUNREF          *
         *                                       *NOEVENTF                    *
         *  Optimization level . . . . . . . :   *NONE                        *
         *  Source listing indentation . . . :   *NONE                        *
         *  Type conversion options  . . . . :   *NONE                        *
         *  Sort sequence  . . . . . . . . . :   *HEX                         *
         *  Language identifier  . . . . . . :   *JOBRUN                      *
         *  User profile . . . . . . . . . . :   *USER                        *
         *  Authority  . . . . . . . . . . . :   *LIBCRTAUT                   *
         *  Truncate numeric . . . . . . . . :   *YES                         *
         *  Fix numeric  . . . . . . . . . . :   *NONE                        *
         *  Allow null values  . . . . . . . :   *NO                          *
         *  Storage model . . .  . . . . . . :   *SNGLVL                      *
         *  Binding directory from Command . :   *NONE                        *
         *  Binding directory from Source  . :   *NONE                        *
         *  Activation group . . . . . . . . :   *STGMDL                      *
         *  Enable performance collection  . :   *PEP                         *
         *  Profiling data . . . . . . . . . :   *NOCOL                       *
         *  Generate program interface . . . :   *NO                          *
         *--------------------------------------------------------------------*
 000007 dcl-c MEMSIZE  30000;                                                                                                000007
 000008 dcl-c PGMSIZE  512;                                                                                                  000008
 000009 dcl-c BUFFSIZE 256;                                                                                                  000009
 000010                                                                                                                      000010
 000011 dcl-s memory    int(3) dim(MEMSIZE) inz(*zeros);                                                                     000011
 000012 dcl-s insPtr    int(5) inz(1);                                                                                       000012
 000013 dcl-s memPtr    int(5) inz(1);                                                                                       000013
 000014 dcl-s buffPtr   int(5) inz(1);                                                                                       000014
 000015 dcl-s loopDepth int(5) inz(0);                                                                                       000015
 000016                                                                                                                      000016
 000017 dcl-pr main extpgm('BFFREE');                                                                                        000017
 000018   *n char(MEMSIZE);                                                                                                  000018
 000019   *n char(BUFFSIZE);                                                                                                 000019
 000020 end-pr;                                                                                                              000020
                                                    ** WWW.PUB400.COM **
  5770WDS V7R4M0  190419 RN        IBM ILE RPG             OTTEB1/BFFREE            PUB400     20-05-09 01:11:01        Page      3
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
 000021                                                                                                                      000021
 000022 // ++++++++Ä>++++Ä>++>+++>+++>+<<<<-Ü>+>+>->>+Ä<Ü<-Ü>>.>---.+++++++..+++.>>.<-.<.+++.------.--------                 000022
  ...   .>>+.>++.
 000023                                                                                                                      000023
 000024 // program entry                                                                                                     000024
 000025 dcl-proc main;                                                                                                       000025
 000026   dcl-pi *n;                                                                                                         000026
 000027     bfpgm     char(MEMSIZE);                                                                                         000027
 000028     outBuffer char(BUFFSIZE);                                                                                        000028
 000029   end-pi;                                                                                                            000029
 000030                                                                                                                      000030
 000031   dcl-s src like(bfpgm) inz(*blanks);                                                                                000031
 000032   dcl-s c char(1) inz('');                                                                                           000032
 000033                                                                                                                      000033
 000034   init();                                                                                                            000034
 000035   src = sanitize(bfpgm);                                                                                             000035
 000036                                                                                                                      000036
 000037   dow insPtr < %len(src);                                                                            B01             000037
 000038     c = %subst(src:insPtr:1);                                                                         01             000038
 000039     select;                                                                                          B02             000039
 000040       when (c = 'Ä');                                                                                X02             000040
 000041         jumpFwd(src);                                                                                 02             000041
 000042       when (c = 'Ü');                                                                                X02             000042
 000043         jumpBack(src);                                                                                02             000043
 000044       when (c = '>');                                                                                X02             000044
 000045         moveLeft();                                                                                   02             000045
 000046       when (c = '<');                                                                                X02             000046
 000047         moveRight();                                                                                  02             000047
 000048       when (c = '+');                                                                                X02             000048
 000049         increment();                                                                                  02             000049
 000050       when (c = '-');                                                                                X02             000050
 000051         decrement();                                                                                  02             000051
 000052       when (c = '.');                                                                                X02             000052
 000053         buffPtr += 1;                                                                                 02             000053
 000054         %subst(outBuffer:buffPtr:1) = bfWrite();                                                      02             000054
 000055       when (c = ',');                                                                                X02             000055
 000056         bfRead();                                                                                     02             000056
 000057       other;                                                                                         X02             000057
 000058         dsply ('Invalid character found ' + c);                                                       02             000058
 000059         leave;                                                                                        02             000059
 000060     endsl;                                                                                           E02             000060
 000061     insPtr += 1;                                                                                      01             000061
 000062   enddo;                                                                                             E01             000062
 000063                                                                                                                      000063
 000064   *inlr = *on;                                                                                                       000064
 000065 end-proc;                                                                                                            000065
 000066                                                                                                                      000066
 000067                                                                                                                      000067
 000068 // strip valid characters out of source                                                                              000068
 000069 dcl-proc sanitize;                                                                                                   000069
                                                    ** WWW.PUB400.COM **
  5770WDS V7R4M0  190419 RN        IBM ILE RPG             OTTEB1/BFFREE            PUB400     20-05-09 01:11:01        Page      4
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
 000070   dcl-pi *n char(PGMSIZE);                                                                                           000070
 000071     dirty char(PGMSIZE);                                                                                             000071
 000072   end-pi;                                                                                                            000072
 000073                                                                                                                      000073
 000074   dcl-c valid 'ÄÜ><+-.,';                                                                                            000074
 000075   dcl-s buffer char(PGMSIZE) inz(*blanks);                                                                           000075
 000076   dcl-s i int(5) inz(0);                                                                                             000076
 000077                                                                                                                      000077
 000078   for i=1 to %len(dirty);                                                                            B01             000078
 000079     if %scan(%subst(dirty:i:1):valid) <> 0;                                                          B02             000079
 000080       %subst(buffer:i:1) = %subst(dirty:i:1);                                                         02             000080
 000081     endif;                                                                                           E02             000081
 000082   endfor;                                                                                            E01             000082
 000083                                                                                                                      000083
 000084   return %trim(buffer);                                                                                              000084
 000085 end-proc;                                                                                                            000085
 000086                                                                                                                      000086
 000087                                                                                                                      000087
 000088 // initialize interpreter                                                                                            000088
 000089 dcl-proc init;                                                                                                       000089
 000090   clear memory;                                                                                                      000090
 000091   insPtr = 1;                                                                                                        000091
 000092   memPtr = 1;                                                                                                        000092
 000093   buffPtr = 1;                                                                                                       000093
 000094   loopDepth = 0;                                                                                                     000094
 000095 end-proc;                                                                                                            000095
 000096                                                                                                                      000096
 000097                                                                                                                      000097
 000098 // jump instruction pointer forward to next command after matching 'Ü' command                                       000098
 000099 dcl-proc jumpFwd;                                                                                                    000099
 000100   dcl-pi *n;                                                                                                         000100
 000101     src char(PGMSIZE);                                                                                               000101
 000102   end-pi;                                                                                                            000102
 000103                                                                                                                      000103
 000104   dcl-s current int(3) inz(0);                                                                                       000104
 000105   dcl-s instruction char(1) inz('');                                                                                 000105
 000106                                                                                                                      000106
 000107   loopDepth += 1;                                                                                                    000107
 000108   current = loopDepth;                                                                                               000108
 000109   instruction = %subst(src:insPtr:1);                                                                                000109
 000110                                                                                                                      000110
 000111   if memory(memPtr) = 1;                                                                             B01             000111
 000112     dow loopDepth <> (current-1);                                                                    B02             000112
 000113       insPtr += 1;                                                                                    02             000113
 000114       if instruction = 'Ä';                                                                          B03             000114
 000115         loopDepth += 1;                                                                               03             000115
 000116       elseif instruction = 'Ü';                                                                      X03             000116
 000117         loopDepth -= 1;                                                                               03             000117
                                                    ** WWW.PUB400.COM **
  5770WDS V7R4M0  190419 RN        IBM ILE RPG             OTTEB1/BFFREE            PUB400     20-05-09 01:11:01        Page      5
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
 000118       endif;                                                                                         E03             000118
 000119     enddo;                                                                                           E02             000119
 000120   endif;                                                                                             E01             000120
 000121 end-proc;                                                                                                            000121
 000122                                                                                                                      000122
 000123                                                                                                                      000123
 000124 // jump instruction pointer back to command after matching 'Ä' command                                               000124
 000125 dcl-proc jumpBack;                                                                                                   000125
 000126   dcl-pi *n;                                                                                                         000126
 000127     src char(PGMSIZE);                                                                                               000127
 000128   end-pi;                                                                                                            000128
 000129                                                                                                                      000129
 000130   dcl-s current int(5) inz(0);                                                                                       000130
 000131   dcl-s instruction char(1) inz('');                                                                                 000131
 000132                                                                                                                      000132
 000133   loopDepth -= 1;                                                                                                    000133
 000134   current = loopDepth;                                                                                               000134
 000135   instruction = %subst(src:insPtr:1);                                                                                000135
 000136                                                                                                                      000136
 000137   if memory(memPtr) <> 0;                                                                            B01             000137
 000138     dow loopDepth <> (current-1);                                                                    B02             000138
 000139       insPtr -= 1;                                                                                    02             000139
 000140       if instruction = 'Ü';                                                                          B03             000140
 000141         loopDepth += 1;                                                                               03             000141
 000142       elseif instruction = 'Ä';                                                                      X03             000142
 000143         loopDepth -= 1;                                                                               03             000143
 000144       endif;                                                                                         E03             000144
 000145     enddo;                                                                                           E02             000145
 000146   endif;                                                                                             E01             000146
 000147 end-proc;                                                                                                            000147
 000148                                                                                                                      000148
 000149                                                                                                                      000149
 000150 // increment data pointer to next cell on the right                                                                  000150
 000151 dcl-proc moveRight;                                                                                                  000151
 000152   if memPtr < MEMSIZE;                                                                               B01             000152
 000153     memPtr += 1;                                                                                      01             000153
 000154   endif;                                                                                             E01             000154
 000155 end-proc;                                                                                                            000155
 000156                                                                                                                      000156
 000157                                                                                                                      000157
 000158 // increment data pointer to next cell on the left                                                                   000158
 000159 dcl-proc moveLeft;                                                                                                   000159
 000160   if memPtr > 1;                                                                                     B01             000160
 000161     memPtr -= 1;                                                                                      01             000161
 000162   endif;                                                                                             E01             000162
 000163 end-proc;                                                                                                            000163
 000164                                                                                                                      000164
 000165                                                                                                                      000165
                                                    ** WWW.PUB400.COM **
  5770WDS V7R4M0  190419 RN        IBM ILE RPG             OTTEB1/BFFREE            PUB400     20-05-09 01:11:01        Page      6
 Line   <---------------------- Source Specifications ----------------------------------------------------->  Do  Change Src Seq
 Number ....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10  Num Date   Id  Number
 000166 // increment byte at data pointer                                                                                    000166
 000167 dcl-proc increment;                                                                                                  000167
 000168   memory(memPtr) += 1;                                                                                               000168
 000169 end-proc;                                                                                                            000169
 000170                                                                                                                      000170
 000171                                                                                                                      000171
 000172 // decrement byte at data pointer                                                                                    000172
 000173 dcl-proc decrement;                                                                                                  000173
 000174   memory(memPtr) += 1;                                                                                               000174
 000175 end-proc;                                                                                                            000175
 000176                                                                                                                      000176
 000177                                                                                                                      000177
 000178 // input one byte and store at data pointer                                                                          000178
 000179 dcl-proc bfRead;                                                                                                     000179
 000180   dcl-s x char(16) inz(*blanks);                                                                                     000180
 000181   dsply 'INPUT: ' '' x;                                                                                              000181
 000182   memory(memPtr) = %int(%subst(x:1:1));                                                                              000182
 000183 end-proc;                                                                                                            000183
 000184                                                                                                                      000184
 000185                                                                                                                      000185
 000186 // output byte at data pointer                                                                                       000186
 000187 dcl-proc bfWrite;                                                                                                    000187
 000188   dcl-pi *n char(1) end-pi;                                                                                          000188
 000189   return %char(memory(memPtr));                                                                                      000189
 000190 end-proc;                                                                                                            000190
        * * * * *   E N D   O F   S O U R C E   * * * * *
                                                    ** WWW.PUB400.COM **
  5770WDS V7R4M0  190419 RN        IBM ILE RPG             OTTEB1/BFFREE            PUB400     20-05-09 01:11:01        Page      7
           A d d i t i o n a l   D i a g n o s t i c   M e s s a g e s
  Msg id  Sv   Statement    Message text
  * * * * *   E N D   O F   A D D I T I O N A L   D I A G N O S T I C   M E S S A G E S   * * * * *
                                                    ** WWW.PUB400.COM **
  5770WDS V7R4M0  190419 RN        IBM ILE RPG             OTTEB1/BFFREE            PUB400     20-05-09 01:11:01        Page      8
                           C r o s s   R e f e r e n c e
       File and Record References:
          File              Device             References (D=Defined)
            Record
          No references in the source.
       Global Field References:
          Field             Attributes         References (D=Defined M=Modified)
          *INLR             N(1)                   000064M
          BFREAD            PROTOTYPE              000056M     000179
          BFWRITE           A(1)                   000054      000187
                            PROTOTYPE
          BUFFPTR           I(5,0)                 000014D     000053M     000054      000093M
          BUFFSIZE          CONST                  000009D     000019      000028
          DECREMENT         PROTOTYPE              000051M     000173
          INCREMENT         PROTOTYPE              000049M     000167
          INIT              PROTOTYPE              000034M     000089
          INSPTR            I(5,0)                 000012D     000037      000038      000061M
                                                   000091M     000109      000113M     000135
                                                   000139M
          JUMPBACK          PROTOTYPE              000043M     000125
          JUMPFWD           PROTOTYPE              000041M     000099
          LOOPDEPTH         I(5,0)                 000015D     000094M     000107M     000108
                                                   000112      000115M     000117M     000133M
                                                   000134      000138      000141M     000143M
          MAIN              PROTOTYPE              000004      000017D     000025
          MEMORY(30000)     I(3,0)                 000011D     000090M     000111      000137
                                                   000168M     000174M     000182M     000189
          MEMPTR            I(5,0)                 000013D     000092M     000111      000137
                                                   000152      000153M     000160      000161M
                                                   000168      000174      000182      000189
          MEMSIZE           CONST                  000007D     000011      000018      000027
                                                   000152
          MOVELEFT          PROTOTYPE              000045M     000159
          MOVERIGHT         PROTOTYPE              000047M     000151
          PGMSIZE           CONST                  000008D     000070      000071      000075
                                                   000101      000127
          SANITIZE          A(512)                 000035      000069
                            PROTOTYPE
       Field References for subprocedure MAIN
          Field             Attributes         References (D=Defined M=Modified)
          BFPGM             A(30000)               000027D     000031      000035
                            BASED(_QRNL_PST+)
          C                 A(1)                   000032D     000038M     000040      000042
                                                   000044      000046      000048      000050
                                                   000052      000055      000058
          OUTBUFFER         A(256)                 000028D     000054M
                            BASED(_QRNL_PST+)
          SRC               A(30000)               000031D     000035M     000037      000038
                                                   000041      000043
       Field References for subprocedure SANITIZE
          Field             Attributes         References (D=Defined M=Modified)
                                                    ** WWW.PUB400.COM **
  5770WDS V7R4M0  190419 RN        IBM ILE RPG             OTTEB1/BFFREE            PUB400     20-05-09 01:11:01        Page      9
          BUFFER            A(512)                 000075D     000080M     000084
          DIRTY             A(512)                 000071D     000078      000079      000080
                            BASED(_QRNL_PST+)
          I                 I(5,0)                 000076D     000078      000079      000080
                                                   000080
          VALID             CONST                  000074D     000079
       Field References for subprocedure INIT
          Field             Attributes         References (D=Defined M=Modified)
          No references in the source.
       Field References for subprocedure JUMPFWD
          Field             Attributes         References (D=Defined M=Modified)
          CURRENT           I(3,0)                 000104D     000108M     000112
          INSTRUCTION       A(1)                   000105D     000109M     000114      000116
          SRC               A(512)                 000101D     000109
                            BASED(_QRNL_PST+)
       Field References for subprocedure JUMPBACK
          Field             Attributes         References (D=Defined M=Modified)
          CURRENT           I(5,0)                 000130D     000134M     000138
          INSTRUCTION       A(1)                   000131D     000135M     000140      000142
          SRC               A(512)                 000127D     000135
                            BASED(_QRNL_PST+)
       Field References for subprocedure MOVERIGHT
          Field             Attributes         References (D=Defined M=Modified)
          No references in the source.
       Field References for subprocedure MOVELEFT
          Field             Attributes         References (D=Defined M=Modified)
          No references in the source.
       Field References for subprocedure INCREMENT
          Field             Attributes         References (D=Defined M=Modified)
          No references in the source.
       Field References for subprocedure DECREMENT
          Field             Attributes         References (D=Defined M=Modified)
          No references in the source.
       Field References for subprocedure BFREAD
          Field             Attributes         References (D=Defined M=Modified)
          X                 A(16)                  000180D     000181M     000182
       Field References for subprocedure BFWRITE
          Field             Attributes         References (D=Defined M=Modified)
          No references in the source.
       Indicator References:
          Indicator                            References (D=Defined M=Modified)
                                                    ** WWW.PUB400.COM **
  5770WDS V7R4M0  190419 RN        IBM ILE RPG             OTTEB1/BFFREE            PUB400     20-05-09 01:11:01        Page     10
          LR                                       000064M
        * * * * *   E N D   O F   C R O S S   R E F E R E N C E   * * * * *
                                                    ** WWW.PUB400.COM **
  5770WDS V7R4M0  190419 RN        IBM ILE RPG             OTTEB1/BFFREE            PUB400     20-05-09 01:11:01        Page     11
                       E x t e r n a l   R e f e r e n c e s
       Statically bound procedures:
          Procedure                            References
          No references in the source.
       Imported fields:
          Field             Attributes         Defined
          No references in the source.
       Exported fields:
          Field             Attributes         Defined
          No references in the source.
    * * * * *   E N D   O F   E X T E R N A L   R E F E R E N C E S   * * * * *
                                                    ** WWW.PUB400.COM **
  5770WDS V7R4M0  190419 RN        IBM ILE RPG             OTTEB1/BFFREE            PUB400     20-05-09 01:11:01        Page     12
                           M e s s a g e   S u m m a r y
  Msg id  Sv Number Message text
        * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *
                                                    ** WWW.PUB400.COM **
  5770WDS V7R4M0  190419 RN        IBM ILE RPG             OTTEB1/BFFREE            PUB400     20-05-09 01:11:01        Page     13
                             F i n a l   S u m m a r y
   Message Totals:
     Information  (00) . . . . . . . :        0
     Warning      (10) . . . . . . . :        0
     Error        (20) . . . . . . . :        0
     Severe Error (30+)  . . . . . . :        0
     ---------------------------------  -------
     Total . . . . . . . . . . . . . :        0
   Source Totals:
     Records . . . . . . . . . . . . :      190
     Specifications  . . . . . . . . :      115
     Data records  . . . . . . . . . :        0
     Comments  . . . . . . . . . . . :       52
          * * * * *   E N D   O F   F I N A L   S U M M A R Y   * * * * *
 Program BFFREE placed in library OTTEB1. 00 highest severity. Created on 20-05-09 at 01:11:02.
           * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *
                                                    ** WWW.PUB400.COM **
